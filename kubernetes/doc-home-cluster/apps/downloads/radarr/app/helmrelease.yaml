---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          labels:
            egress.home.arpa/internet: allow
            egress.home.arpa/kubedns: allow # FIXME: Remove when clusterNetworkPolicy is in place
            ingress.home.arpa/nginx-external: allow
          securityContext:
            runAsUser: ${APP_UID}
            runAsGroup: ${APP_GID}
            fsGroup: ${APP_GID}
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 65542 # gladius:external-services

        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.17.0.9555@sha256:ca1d1f55524c1d58cd9aa58e747b7ee37536aed4f95852ab07eb0b984dcf1817

            env:
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 7878
              RADARR__APPLICATION_URL: https://${HOSTNAME}
              RADARR__LOG_LEVEL: info
              RADARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: radarr-secret
                    key: api_key

            resources:
              requests:
                cpu: 20m
                memory: 256Mi
              limits:
                memory: 2Gi

    service:
      app:
        controller: radarr
        ports:
          http:
            port: *port

    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: ingress-ext.piscio.net
        className: "external-nginx"
        hosts:
          - host: "${HOSTNAME}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - "${HOSTNAME}"

    persistence:
      config:
        existingClaim: "${VOLSYNC_CLAIM}"
      media:
        type: nfs
        server: piscionas.piscio.net
        path: /volume1/Media
        globalMounts:
          - path: /data/nas-media
