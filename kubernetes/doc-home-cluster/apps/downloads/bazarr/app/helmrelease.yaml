---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: bazarr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      bazarr:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          labels:
            egress.home.arpa/internet: allow
            ingress.home.arpa/nginx-internal: allow
            egress.home.arpa/kubedns: allow # FIXME: Remove when clusterNetworkPolicy is in place
          securityContext:
            runAsUser: "${APP_UID}"
            runAsGroup: "${APP_GID}"
            fsGroup: "${APP_GID}"
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 65542 # gladius:external-services

        containers:
          app:
            image:
              repository: ghcr.io/home-operations/bazarr
              tag: 1.5.1@sha256:7ff7af1a8588569f6d9a2870e3658650379ead5082d68c5e5a7c1f01e0814a86

            env:
              BAZARR__INSTANCE_NAME: Bazarr
              BAZARR__PORT: &port 6767
              BAZARR__APPLICATION_URL: "https://bazarr.piscio.net"
              BAZARR__LOG_LEVEL: info
              BAZARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: bazarr-secret
                    key: api_key
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5

            resources:
              requests:
                cpu: 15m
                memory: 128Mi
              limits:
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    service:
      app:
        controller: bazarr
        ports:
          http:
            port: *port

    persistence:
      config:
        existingClaim: "${VOLSYNC_CLAIM}"

      media:
        type: nfs
        server: piscionas.piscio.net
        path: /volume1/Media
        globalMounts:
          - path: /data/nas-media

    route:
      app:
        hostnames:
          - ${HOSTNAME}
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: bazarr
                port: *port
