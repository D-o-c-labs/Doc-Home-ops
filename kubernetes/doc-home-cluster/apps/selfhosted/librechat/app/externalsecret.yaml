---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: librechat-secret
spec:
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: librechat-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        DEBUG_LOGGING: "true"

        ALLOW_EMAIL_LOGIN: "true"
        ALLOW_REGISTRATION: "false"
        ALLOW_SOCIAL_LOGIN: "true"
        ALLOW_SOCIAL_REGISTRATION: "false"

        # ENDPOINTS: "openAI,agents,gptPlugins,OpenRouter"

        APP_TITLE: "Librechat"
        DOMAIN_CLIENT: "https://${HOSTNAME}"
        DOMAIN_SERVER: "https://${HOSTNAME}"
        NODE_ENV: "production"

        CREDS_KEY: "{{ .librechat_creds_key }}"
        CREDS_IV: "{{ .librechat_creds_iv }}"

        CONFIG_PATH: "/config/librechat.yaml"

        JWT_SECRET: "{{ .librechat_jwt_secret }}"
        JWT_REFRESH_SECRET: "{{ .librechat_jwt_refresh_secret }}"
        # CHECK_BALANCE: "true"

        # LLMs
        # OpenRouter Key
        OPENROUTER_KEY: "{{ .openrouter_api_key }}"
        # OPENROUTER_API_KEY: "{{ .openrouter_api_key }}"
        ASSISTANTS_API_KEY: "{{ .openai_api_key }}"
        OPENAI_API_KEY: "{{ .openai_api_key }}"
        # ASSISTANTS_API_KEY: "{{ .openrouter_api_key }}"
        # OPENAI_API_KEY: "{{ .openrouter_api_key }}"
        EXPERIMENTAL_AGENTS: "true"

        # Search
        SEARCH: "true"
        MEILI_HOST: http://librechat-meilisearch:7700
        MEILI_MASTER_KEY: "{{ .librechat_meili_master_key }}"

        # Plugins
        GOOGLE_SEARCH_API_KEY: "{{ .google_search_api_key }}"
        GOOGLE_CSE_ID: "{{ .google_search_cse_id }}"
        SERPAPI_API_KEY: "{{ .librechat_serpapi_api_key }}"
        TAVILY_API_KEY: "{{ .librechat_tavily_api_key }}"
        TRAVERSAAL_API_KEY: "{{ .librechat_traversaal_api_key }}"
        WOLFRAM_APP_ID: "{{ .librechat_wolfram_api_key }}"

        # MongoDB
        MONGO_URI: mongodb://librechat-mongodb:27017/LibreChat
        # MONGO_URI: "{{ .mongodb_url }}"

        # Rag-Api
        RAG_API_URL: http://librechat-rag-api:8000

        # Plugins
        #PLUGIN_MODELS: "gpt-4o,gpt-4o-mini,gpt-4,gpt-4-turbo,gpt-4-turbo-preview,gpt-4-0125-preview,gpt-4-1106-preview,gpt-4-0613,gpt-3.5-turbo,gpt-3.5-turbo-0125,gpt-3.5-turbo-1106,gpt-3.5-turbo-0613"
        # PLUGIN_MODELS: "openai/gpt-4o-2024-08-06,openai/chatgpt-4o-latest,openai/gpt-4o-mini-2024-07-18,openai/gpt-4o-mini"

        # User Settings
        BAN_VIOLATIONS: "true"
        BAN_DURATION: 1000 * 60 * 60 * 2
        BAN_INTERVAL: "20"

        LOGIN_VIOLATION_SCORE: "1"
        REGISTRATION_VIOLATION_SCORE: "1"
        CONCURRENT_VIOLATION_SCORE: "1"
        MESSAGE_VIOLATION_SCORE: "1"
        NON_BROWSER_VIOLATION_SCORE: "20"

        LOGIN_MAX: "7"
        LOGIN_WINDOW: "5"
        REGISTER_MAX: "5"
        REGISTER_WINDOW: "60"

        LIMIT_CONCURRENT_MESSAGES: "true"
        CONCURRENT_MESSAGE_MAX: "2"

        LIMIT_MESSAGE_IP: "true"
        MESSAGE_IP_MAX: "40"
        MESSAGE_IP_WINDOW: "1"

        LIMIT_MESSAGE_USER: "false"
        MESSAGE_USER_MAXL: "40"
        MESSAGE_USER_WINDOW: "1"

        ILLEGAL_MODEL_REQ_SCORE: "5"

        ALLOW_SHARED_LINKS: "true"
        ALLOW_SHARED_LINKS_PUBLIC: "true"

        OPENID_ISSUER: "{{ .authentik_librechat_config_issuer }}"
        OPENID_CLIENT_ID: "{{ .authentik_librechat_client_id }}"
        OPENID_CLIENT_SECRET: "{{ .authentik_librechat_client_secret }}"
        OPENID_SESSION_SECRET: "{{ .librechat_oidc_session_secret }}"
        OPENID_CALLBACK_URL: /oauth/openid/callback
        OPENID_SCOPE: openid profile email
        # Optional customization below
        OPENID_BUTTON_LABEL: Login with Authentik
        OPENID_IMAGE_URL: https://cdn.jsdelivr.net/gh/selfhst/icons/png/authentik.png

  dataFrom:
    - extract:
        key: openrouter
      rewrite:
        - regexp:
            source: "(.*)"
            target: "openrouter_$1"
    - extract:
        key: openai
      rewrite:
        - regexp:
            source: "(.*)"
            target: "openai_$1"
    - extract:
        key: google_search
      rewrite:
        - regexp:
            source: "(.*)"
            target: "google_search_$1"
    - extract:
        key: librechat
      rewrite:
        - regexp:
            source: "(.*)"
            target: "librechat_$1"
    - extract:
        key: mongodb-librechat
      rewrite:
        - regexp:
            source: "(.*)"
            target: "mongodb_$1"
    - extract:
        key: authentik
      rewrite:
        - regexp:
            source: "(.*)"
            target: "authentik_$1"

---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: librechat-db
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: crunchy-pgo-secrets
    kind: ClusterSecretStore
  target:
    name: librechat-db-secret
    template:
      type: Opaque
      data:
        POSTGRES_DB: '{{ index . "dbname" }}'
        POSTGRES_USER: '{{ index . "user" }}'
        POSTGRES_PASSWORD: '{{ index . "password" }}'
        DB_HOST: '{{ index . "host" }}'
        DB_PORT: '{{ index . "port" }}'
  dataFrom:
    - extract:
        key: postgres-pguser-librechat
