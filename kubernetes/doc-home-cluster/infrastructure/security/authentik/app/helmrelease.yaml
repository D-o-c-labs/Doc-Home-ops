---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2024.6.4
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  values:
    global:
      deploymentAnnotations:
        secret.reloader.stakater.com/reload: authentik-secret,authentik-db-secret,authentik-redis-secret

      envFrom:
        - secretRef:
            name: authentik-db-secret
        - secretRef:
            name: authentik-secret
        - secretRef:
            name: authentik-redis-secret

      # envValueFrom:
        # AUTHENTIK_SECRET_KEY:
        #   secretKeyRef:
        #     name: authentik-secret
        #     key: authentik_secret_key
        # AUTHENTIK_EMAIL__HOST:
        #   secretKeyRef:
        #     name: authentik-secret
        #     key: authentik_email_host
        # AUTHENTIK_EMAIL__USERNAME:
        #   secretKeyRef:
        #     name: authentik-secret
        #     key: authentik_email_username
        # AUTHENTIK_EMAIL__PASSWORD:
        #   secretKeyRef:
        #     name: authentik-secret
        #     key: authentik_email_password
        # AUTHENTIK_EMAIL__FROM:
        #   secretKeyRef:
        #     name: authentik-secret
        #     key: authentik_email_from
        # AUTHENTIK_POSTGRESQL__HOST:
        #   secretKeyRef:
        #     name: "${APP}-pguser-${DB_USER}"
        #     key: host
        # AUTHENTIK_POSTGRESQL__NAME:
        #   secretKeyRef:
        #     name: "${APP}-pguser-${DB_USER}"
        #     key: dbname
        # AUTHENTIK_POSTGRESQL__USER:
        #   secretKeyRef:
        #     name: "${APP}-pguser-${DB_USER}"
        #     key: user
        # AUTHENTIK_POSTGRESQL__PASSWORD:
        #   secretKeyRef:
        #     name: "${APP}-pguser-${DB_USER}"
        #     key: password
        # AUTHENTIK_REDIS__PASSWORD:
        #   secretKeyRef:
        #     name: authentik-redis-secret
        #     key: AUTHENTIK_REDIS_PASSWORD

    authentik:
      log_level: info
      email:
        port: 587
        use_tls: true
      error_reporting:
        enabled: false
        send_pii: false
      redis:
        host: "authentik-redis.security.svc.cluster.local"
        password: ""

    server:
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true

      ingress:
        enabled: true
        ingressClassName: internal-nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: ingress-ext.piscio.net
        hosts:
          - "${HOSTNAME}"

    postgresql:
      enabled: false

    prometheus:
      rules:
        enabled: true

    redis:
      enabled: false