---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: librechat
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      librechat:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          labels:
            egress.home.arpa/internet: allow
            ingress.home.arpa/gateway-route: allow
            egress.home.arpa/kubedns: allow # FIXME: Remove when clusterNetworkPolicy is in place

        containers:
          app:
            image:
              repository: ghcr.io/danny-avila/librechat-dev
              # tag: v0.7.6
              tag: latest@sha256:dfdbe2e0cc2199cb84ec2e313186e276e27b9dad3ab8169860ca0be51322d3eb
            probes:
              liveness: &probes # Keep anchor for liveness probe definition
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 3080
                  initialDelaySeconds: 15 # Liveness probe starts 15s after startup probe succeeds
                  periodSeconds: 20
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: # Readiness probe remains unchanged
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 3080
                  initialDelaySeconds: 0 # Starts checking immediately once container network is up
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 30 # Allow more failures for readiness during startup potentially
              startup: # Explicitly define startup probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 3080
                  initialDelaySeconds: 60 # Wait 90 seconds before the first check
                  periodSeconds: 25 # Check every 25 seconds after the initial delay
                  timeoutSeconds: 5
                  failureThreshold: 3 # Fail after 3 consecutive failures (total wait time ~90 + 3*25 = 165s)
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                cpu: 100m
                memory: 512Mi

            envFrom:
              - secretRef:
                  name: librechat-secret

    service:
      app:
        controller: librechat
        ports:
          http:
            port: &port 3080

    persistence:
      librechat-configfile:
        type: secret
        name: librechat-config
        advancedMounts:
          librechat:
            app:
              - path: /config/librechat.yaml
                subPath: librechat.yaml

    route:
      app:
        hostnames:
          - ${HOSTNAME}
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: librechat
                port: *port
